from enum import Enum
from django.utils.translation import gettext_lazy as _

class ErrorMessages(Enum):
    EMAIL_ALREADY_VERIFIED = _("User email is already verified.")
    INVALID_CONFIRMATION_CODE = _("Invalid confirmation code.")
    MAX_AFFILIATE_LINKS = _("You can only have 20 affiliate links.")
    NO_UNCONFIRMED_TOTP_DEVICE = _("No unconfirmed TOTP device found.")
    INVALID_TOTP_TOKEN = _("Invalid TOTP token.")
    NO_CONFIRMED_TOTP_DEVICE = _("No confirmed TOTP device found.")
    EMAIL_NOT_VERIFIED = _("Email not verified.")
    USER_NOT_FOUND = _("No user found with the provided data.")
    NO_LOGIN_DATA_PROVIDED = _("No login data provided.")
    OLD_PASSWORD_INCORRECT = _("The old password is incorrect.")
    EMAIL_ALREADY_EXISTS = _("A user with this data already exists.")
    EXTERNAL_SERVICE_ERROR = _("External service error")
    GOOGLE_ACCESS_TOKEN_FAILED = _("Failed to obtain access token from Google.")
    INVALID_TELEGRAM_AUTH = _("Invalid Telegram authentication.")
    INVALID_SIGNATURE_OR_ADDRESS = _("The signature or address is invalid.")
    INCORRECT_EMAIL_OR_PASSWORD = _('The email and/or password you entered is incorrect. Please try again.')
    TFA_CODE_IS_REQUIRED = _("TFA code is required.")
    INVALID_TFA_TOKEN = _("Invalid or expired token.")
    TOO_MANY_ATTEMPTS = _("Too many attempts. Please wait a few minutes before requesting another confirmation email.")
    TOKEN_DOES_NOT_MATCH_USER = _("Token does not match user")
    TOKEN_IS_INVALID = _("Token is invalid or expired")
    TOKEN_IS_BLACKLISTED = _("Token is already blacklisted")
    TOKEN_NOT_FOUND = _("Token not found")
    TOKEN_ERROR = _("Token error")
    SESSION_NOT_FOUND = _("Session not found")
